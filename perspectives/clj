#s(persp--state-complete ("/home/howie/Dropbox/gtd/inbox.org" "/home/howie/IdeaProjects/clj-yt-scrape/project.clj" "/home/howie/.emacs.d/.gitignore" "~/.emacs.d/" "~/.emacs.d/perspectives/" "/home/howie/.emacs.d/personal/perspectives.el" "~/IdeaProjects/" "~/IdeaProjects/clj-yt-scrape/" "~/.emacs.d/personal/preload/" "~/" "~/IdeaProjects/fulcro-rad-demo/") (#s(persp--state-frame #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("main" #s(persp--state-single ("inbox.org" "project.clj") (((min-height . 8) (min-width . 20) (min-height-ignore . 4) (min-width-ignore . 16) (min-height-safe . 2) (min-width-safe . 4) (min-pixel-height . 152) (min-pixel-width . 180) (min-pixel-height-ignore . 76) (min-pixel-width-ignore . 144) (min-pixel-height-safe . 38) (min-pixel-width-safe . 36)) hc (pixel-width . 2560) (pixel-height . 1009) (total-width . 284) (total-height . 53) (normal-height . 1.0) (normal-width . 1.0) (combination-limit . t) (vc (pixel-width . 1368) (pixel-height . 1009) (total-width . 152) (total-height . 53) (normal-height . 1.0) (normal-width . 0.5342465753424657) (combination-limit) (leaf (pixel-width . 1368) (pixel-height . 494) (total-width . 152) (total-height . 26) (normal-height . 0.48571428571428577) (normal-width . 1.0) (parameters (purpose-dedicated . t)) (buffer "project.clj" (selected) (hscroll . 0) (fringes 8 8 nil) (margins 2) (scroll-bars nil 2 t nil 0 t) (vscroll . 0) (dedicated) (point . 268) (start . 1))) (leaf (last . t) (pixel-width . 1368) (pixel-height . 515) (total-width . 152) (total-height . 27) (normal-height . 0.5142857142857142) (normal-width . 1.0) (parameters (purpose-dedicated . t)) (buffer "inbox.org" (selected . t) (hscroll . 0) (fringes 8 8 nil) (margins 2) (scroll-bars nil 2 t nil 0 t) (vscroll . 0) (dedicated) (point . 146) (start . 1)))) (vc (last . t) (pixel-width . 1192) (pixel-height . 1009) (total-width . 132) (total-height . 53) (normal-height . 1.0) (normal-width . 0.4657534246575343) (combination-limit) (leaf (pixel-width . 1192) (pixel-height . 494) (total-width . 132) (total-height . 26) (normal-height . 0.48571428571428577) (normal-width . 1.0) (parameters (purpose-dedicated . t)) (buffer "*scratch*" (selected) (hscroll . 0) (fringes 8 8 nil) (margins 2) (scroll-bars nil 2 t nil 0 t) (vscroll . 0) (dedicated) (point . 2140) (start . 1374))) (leaf (last . t) (pixel-width . 1192) (pixel-height . 515) (total-width . 132) (total-height . 27) (normal-height . 0.5142857142857142) (normal-width . 1.0) (parameters (purpose-dedicated . t)) (buffer "*scratch*" (selected) (hscroll . 0) (fringes 8 8 nil) (margins nil) (scroll-bars nil 2 t nil 0 t) (vscroll . 0) (dedicated) (point . 1) (start . 1)))))))) ("main")) #s(persp--state-frame #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("main" #s(persp--state-single nil (((min-height . 4) (min-width . 10) (min-height-ignore . 2) (min-width-ignore . 4) (min-height-safe . 1) (min-width-safe . 2) (min-pixel-height . 4) (min-pixel-width . 10) (min-pixel-height-ignore . 2) (min-pixel-width-ignore . 4) (min-pixel-height-safe . 1) (min-pixel-width-safe . 2)) leaf (pixel-width . 10) (pixel-height . 8) (total-width . 10) (total-height . 8) (normal-height . 1.0) (normal-width . 1.0) (buffer "*scratch*" (selected . t) (hscroll . 0) (fringes 0 0 nil) (margins 2) (scroll-bars nil 0 t nil 0 t) (vscroll . 0) (dedicated) (point . 145) (start . 1)))))) ("main"))))